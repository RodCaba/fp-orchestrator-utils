syntax = "proto3";

package imu_service;

// The IMUService defines the RPC methods for interacting with IMU devices.
service IMUService {
  // HealthCheck is used to check the health of the IMU service.
  rpc HealthCheck(HealthCheckRequest) returns (HealthCheckResponse);
  // SendIMUPayload is used to send IMU data from a device to the server.
  rpc SendIMUPayload(IMUPayload) returns (IMUPayloadResponse);
}

// The IMUPayload message contains sensor data from an IMU device.
message IMUPayload {
  string device_id = 1;
  SensorData data = 3;
}

message SensorData {
  string sensor_type = 1; // e.g., "accelerometer", "gyroscope"
  SensorValues values = 2; // Sensor values for the specific sensor type
}

// The IMUPayloadResponse message is used to acknowledge the receipt of the IMU payload.
message IMUPayloadResponse {
  string device_id = 1;
  string status = 2; // e.g., "success", "error"
}

// The SensorValues message represents a single sensor reading with x, y, and z components.
message SensorValues {
  oneof sensor_data {
    StandardSensorValues standard = 1;
    OrientationSensorValues orientation = 2;
  }
}

// Standard sensor values for accelerometer, gyroscope, etc.
message StandardSensorValues {
  double x = 1;
  double y = 2;
  double z = 3;
}

// Orientation sensor values with quaternion and Euler angles.
message OrientationSensorValues {
  double qx = 1;
  double qy = 2;
  double qz = 3;
  double qw = 4;
  double roll = 5;
  double pitch = 6;
  double yaw = 7;
}

message HealthCheckRequest {}

message HealthCheckResponse {
  string status = 1; // e.g., "healthy", "unhealthy"
  string message = 2; // Additional information about the health status
}
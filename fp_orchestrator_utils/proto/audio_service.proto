syntax = "proto3";

package audio_service;

// The AudioService defines the RPC methods for interacting with the audio processing system.
service AudioService {
  // HealthCheck is used to check the health of the audio service.
  rpc HealthCheck(HealthCheckRequest) returns (HealthCheckResponse);
  // ProcessAudioPayload is used to send processed audio data from a device to the cloud storage.
  rpc ProcessAudioPayload(AudioPayload) returns (AudioPayloadResponse);
}

// The AudioPayload message contains audio data and metadata.
message AudioPayload {
  string session_id = 1;
  int64 timestamp = 2; // Unix timestamp in milliseconds
  
  // Metadata about the audio data
  string original_file_path = 3;
  string audio_format = 4; // e.g., "mp3", "wav"
  int32 sample_rate = 5; // Sample rate in Hz
  int32 channels = 6;

  // Feature extraction results
  repeated AudioFeature features = 7;

  // Processing parameters
  ProcessingParameters parameters = 8;
}

message AudioFeature {
  string feature_type = 1; // e.g., "MFCC", "spectrogram"
  repeated int32 feature_shape = 2;
  FeatureParameters feature_parameters = 3; // Additional parameters for the feature extraction
}

message FeatureParameters {
  int32 n_ftt = 1; // Number of frequency bins
  int32 hop_length = 2;
  int32 n_mels = 3; // Number of Mel bands
  int32 f_min = 4; // Minimum frequency
  int32 f_max = 5; // Maximum frequency
}

message ProcessingParameters {
  int32 target_sample_rate = 1;
  int32 target_length = 2; // Target length in seconds
  bool normalize = 3; // Whether audio was normalized
}

// The AudioPayloadResponse message is used to acknowledge the receipt of the audio payload.
message AudioPayloadResponse {
  string session_id = 1;
  int64 timestamp = 2; // Unix timestamp in milliseconds
  string status = 3; // e.g., "success", "error"
}

// The HealthCheckRequest message is used to check the health of the audio service.
message HealthCheckRequest {}

// The HealthCheckResponse message is used to return the health status of the audio service.
message HealthCheckResponse {
  string status = 1; // e.g., "healthy", "unhealthy"
  string message = 2; // Additional information about the health status
}